import { Meta, StoryObj } from '@storybook/nextjs';
import { Button } from './Button';
import IconFlagRussia from './../../assets/icons/flag-russia.svg';
import IconGoogle from './../../assets/icons/google-svgrepo-com-1.svg';
import Link from 'next/link';

const meta = {
  component: Button,
  title: 'UI/Button',
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: `–ö–Ω–æ–ø–∫–∞ ‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π.

### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- ‚úÖ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å—Ç–∏–ª–µ–π (primary, secondary, outline, text)
- üéõÔ∏è –ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç size
- üñ±Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è disabled
- üé® –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–∫–æ–Ω–æ–∫ –∏ –ª—é–±–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- üìè –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (px, %, rem, vw, vh –∏ –¥—Ä—É–≥–∏–µ CSS-–µ–¥–∏–Ω–∏—Ü—ã)
- üîÑ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ asChild –¥–ª—è –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

### Props:
- \`variant\` - –≤–∞—Ä–∏–∞–Ω—Ç —Å—Ç–∏–ª—è: 'buttonPrimary' | 'buttonSecondary' | 'buttonOutline' | 'buttonText'
- \`disabled\` - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
- \`size\` - –æ–±—ä–µ–∫—Ç —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏:
  - \`minWidth\` / \`maxWidth\` / \`width\` - —à–∏—Ä–∏–Ω–∞ (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
  - \`minHeight\` / \`maxHeight\` / \`height\` - –≤—ã—Å–æ—Ç–∞ (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
  - \`padding\` - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
  - \`margin\` - –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
- \`onClick\` - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
- \`type\` - —Ç–∏–ø –∫–Ω–æ–ø–∫–∏: 'button' | 'submit' | 'reset'
- \`asChild\` - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Slot –∏–∑ Radix UI –¥–ª—è –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
- \`className\` - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π

### –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
\`\`\`tsx
// –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ px)
<Button 
  variant="buttonPrimary" 
  size={{ minWidth: 200, minHeight: 40 }}
>
  Click me
</Button>

// –°—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ª—é–±—ã–µ CSS-–µ–¥–∏–Ω–∏—Ü—ã)
<Button 
  variant="buttonPrimary" 
  size={{ width: "100%", minWidth: "200px" }}
>
  Click me
</Button>

// –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
<Button 
  variant="buttonPrimary" 
  size={{ minWidth: 200, height: "48px", padding: "12px 24px" }}
>
  Click me
</Button>

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ asChild –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
<Button 
  variant="buttonPrimary" 
  asChild
>
  <Link href="/some-page">
    Go to page
  </Link>
</Button>

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ asChild —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º
<Button 
  variant="buttonOutline" 
  asChild
>
  <CustomComponent onClick={handleClick}>
    Custom action
  </CustomComponent>
</Button>
\`\`\`

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å asChild:
–ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –ø—Ä–æ–ø—Å–∞ \`asChild={true}\` –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Button –Ω–µ —Å–æ–∑–¥–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π DOM-—ç–ª–µ–º–µ–Ω—Ç,
–∞ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–¥–∞–µ—Ç –≤—Å–µ —Å–≤–æ–∏ –ø—Ä–æ–ø—Å—ã –∏ —Å—Ç–∏–ª–∏ –ø–µ—Ä–≤–æ–º—É –¥–æ—á–µ—Ä–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —á–µ—Ä–µ–∑ Slot –∏–∑ Radix UI.
–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Button –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –ª—é–±—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, —Å–æ—Ö—Ä–∞–Ω—è—è –µ–¥–∏–Ω—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å.

\`\`\`tsx
// –ë–µ–∑ asChild - —Å–æ–∑–¥–∞–µ—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç button
<Button variant="buttonPrimary">
  Click me
</Button>

// –° asChild - —Å–æ–∑–¥–∞–µ—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç a (—Å—Å—ã–ª–∫–∞) —Å —Å—Ç–∏–ª—è–º–∏ –∫–Ω–æ–ø–∫–∏
<Button variant="buttonPrimary" asChild>
  <a href="https://example.com">
    Go to example
  </a>
</Button>
\`\`\``
      }
    }
  },
  argTypes: {
    variant: {
      control: { type: 'radio' },
      options: ['buttonPrimary', 'buttonSecondary', 'buttonOutline', 'buttonText'],
      description: '–¢–µ–º–∞ –∫–Ω–æ–ø–∫–∏'
    },
    disabled: {
      control: { type: 'boolean' },
      description: '–°–æ—Å—Ç–æ—è–Ω–∏–µ disabled'
    },
    size: {
      description: '–û–±—ä–µ–∫—Ç —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∫–Ω–æ–ø–∫–∏'
    },
    onClick: {
      description: '–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞'
    },
    asChild: {
      control: { type: 'boolean' },
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Slot –∏–∑ Radix UI –¥–ª—è –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏'
    }
  }
} satisfies Meta<typeof Button>;

export default meta;
type Story = StoryObj<typeof meta>;

export const Default: Story = {
  args: {
    children: 'Button',
    variant: 'buttonPrimary',
    onClick: () => alert('Button Default clicked!')
  }
};

Default.parameters = {
  docs: {
    description: {
      story: `–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –±–∞–∑–æ–≤–æ–π —Ç–µ–º–æ–π`
    }
  }
};

export const Secondary: Story = {
  args: {
    children: 'Button',
    variant: 'buttonSecondary',
    onClick: () => alert('Button Secondary clicked!')
  }
};

Secondary.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–º–æ–π Secondary`
    }
  }
};

export const Outline: Story = {
  args: {
    children: 'Button',
    variant: 'buttonOutline',
    onClick: () => alert('Button Outline clicked!')
  }
};

Outline.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–º–æ–π Outline`
    }
  }
};

export const Text: Story = {
  args: {
    children: 'Button',
    variant: 'buttonText',
    onClick: () => alert('Button Dark clicked!')
  }
};

Text.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ –±–µ–∑ –≤–∏–¥–∏–º–æ–≥–æ –±–æ—Ä–¥–µ—Ä–∞ –¥–ª—è –±–æ–ª—å—à–µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏`
    }
  }
};

export const Disabled: Story = {
  args: {
    children: 'Button',
    variant: 'buttonPrimary',
    disabled: true,
    onClick: () => alert('Button Dark clicked!')
  }
};

Disabled.parameters = {
  docs: {
    description: {
      story: `–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞`
    }
  }
};

export const TextWithIconRight: Story = {
  args: {
    children: '',
    onClick: () => alert('Button clicked!'),
    variant: 'buttonOutline'
  },
  render: (args) => (
    <Button {...args}>
      Button <IconFlagRussia width={24} height={24} />
    </Button>
  )
};

TextWithIconRight.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–∫–æ–Ω–∫–æ–π —Å–ø—Ä–∞–≤–∞`
    }
  }
};

export const TextWithIconLeft: Story = {
  args: {
    children: '',
    variant: 'buttonOutline',
    onClick: () => alert('Button clicked!')
  },
  render: (args) => (
    <Button {...args}>
      <IconFlagRussia width={24} height={24} /> Button
    </Button>
  )
};

TextWithIconLeft.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–∫–æ–Ω–∫–æ–π —Å–ª–µ–≤–∞`
    }
  }
};

export const OnlyIcon: Story = {
  args: {
    children: '',
    variant: 'buttonOutline',
    onClick: () => alert('Button clicked!')
  },
  render: (args) => (
    <Button {...args}>
      <IconFlagRussia width={24} height={24} />
    </Button>
  )
};

OnlyIcon.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ —Å –∏–∫–æ–Ω–∫–æ–π`
    }
  }
};

export const WithCustomContent: Story = {
  args: {
    children: '',
    variant: 'buttonOutline',
    onClick: () => alert('Button clicked!')
  },
  render: (args) => (
    <Button {...args}>
      <span style={{ display: 'flex', flexDirection: 'column-reverse', alignItems: 'center' }}>
        <IconFlagRussia width={24} height={24} /> Button
      </span>
    </Button>
  )
};

WithCustomContent.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–Ω—É—Ç—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ–±–µ—Ä—Ç–∫—É span –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ span`
    }
  }
};

export const CustomWithIcon: Story = {
  args: {
    children: '',
    variant: 'buttonOutline',
    size: {
      minWidth: 15,
      minHeight: 15,
      padding: '10px'
    },
    onClick: () => alert('Button clicked!')
  },
  render: (args) => (
    <Button {...args}>
      <IconGoogle width={24} height={24} />
    </Button>
  )
};

CustomWithIcon.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ c –∏–∫–æ–Ω–∫–æ–π –∏ –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏`
    }
  }
};

export const ResponsiveButton: Story = {
  args: {
    children: 'Responsive Button',
    variant: 'buttonSecondary',
    size: {
      width: '100%',
      minWidth: 'min-content',
      maxWidth: '400px',
      height: 'clamp(40px, 5vh, 60px)'
    },
    onClick: () => alert('Responsive button clicked!')
  }
};

ResponsiveButton.parameters = {
  docs: {
    description: {
      story: `–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CSS-—Ñ—É–Ω–∫—Ü–∏–∏ \`clamp()\` –≤ –æ–±—ä–µ–∫—Ç–µ size.`
    }
  }
};

export const MarginParametrs: Story = {
  args: {
    children: '',
    size: {
      margin: '20px 0px 20px 0px'
    },
    onClick: () => alert('Button clicked!')
  },
  render: (args) => (
    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
      <div style={{ border: '5px solid #fefefe', width: 300 }}></div>
      <Button {...args}>Button</Button>
      <div style={{ border: '5px solid #fefefe', width: 300 }}></div>
    </div>
  )
};

MarginParametrs.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å –≤–Ω–µ—à–Ω–∏–º–∏ –æ—Ç—Å—Ç—É–ø–∞–º–∏`
    }
  }
};

export const AsChildLink: Story = {
  args: {
    children: '',
    variant: 'buttonPrimary',
    asChild: true
  },
  render: (args) => (
    <Button {...args}>
      <a href="https://google.com" target={'_blank'}>
        Google
      </a>
    </Button>
  )
};

AsChildLink.parameters = {
  docs: {
    description: {
      story: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ asChild –¥–ª—è –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –≤ –∫–Ω–æ–ø–∫—É. –°—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫ —ç–ª–µ–º–µ–Ω—Ç—É —Å—Å—ã–ª–∫–∏.`
    }
  }
};

export const AsChildNextLink: Story = {
  args: {
    children: '',
    variant: 'buttonSecondary',
    asChild: true
  },
  render: (args) => (
    <Button {...args}>
      <Link href="https://google.com" target={'_blank'}>
        Next.js Link as Button
      </Link>
    </Button>
  )
};

AsChildNextLink.parameters = {
  docs: {
    description: {
      story: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ asChild —Å Next.js Link –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º. –°—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫ —ç–ª–µ–º–µ–Ω—Ç—É —Å—Å—ã–ª–∫–∏.`
    }
  }
};

export const AsChildCustomComponent: Story = {
  args: {
    children: '',
    variant: 'buttonOutline',
    asChild: true
  },
  render: (args) => {
    const CustomComponent = ({ children, ...props }: { children: React.ReactNode }) => (
      <div {...props} style={{ cursor: 'pointer' }}>
        {children}
      </div>
    );

    return (
      <Button {...args}>
        <CustomComponent>Custom Component as Button</CustomComponent>
      </Button>
    );
  }
};

AsChildCustomComponent.parameters = {
  docs: {
    description: {
      story: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ asChild —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º. –°—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫ –∫–∞—Å—Ç–æ–º–Ω–æ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É.`
    }
  }
};
