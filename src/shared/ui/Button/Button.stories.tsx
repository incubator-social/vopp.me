import { Meta, StoryObj } from '@storybook/nextjs';
import { Button } from './Button';
import IconFlagRussia from './../../assets/icons/flag-russia.svg';
import IconGoogle from './../../assets/icons/google-svgrepo-com-1.svg';
import Link from 'next/link';

const meta = {
  component: Button,
  title: 'UI/Button',
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: `–ö–Ω–æ–ø–∫–∞ ‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π.

### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- ‚úÖ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å—Ç–∏–ª–µ–π (primary, secondary, outline, text)
- üéõÔ∏è –ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç size
- üñ±Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è disabled
- üé® –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–∫–æ–Ω–æ–∫ –∏ –ª—é–±–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- üìè –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (px, %, rem, vw, vh –∏ –¥—Ä—É–≥–∏–µ CSS-–µ–¥–∏–Ω–∏—Ü—ã)
- üîó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–∞–∫ —Å—Å—ã–ª–∫–∏ (—á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å href)
- üß© –ü–æ–¥–¥–µ—Ä–∂–∫–∞ asChild –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

### Props:
- \`variant\` - –≤–∞—Ä–∏–∞–Ω—Ç —Å—Ç–∏–ª—è: 'buttonPrimary' | 'buttonSecondary' | 'buttonOutline' | 'buttonText'
- \`disabled\` - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
- \`size\` - –æ–±—ä–µ–∫—Ç —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏:
  - \`minWidth\` / \`maxWidth\` / \`width\` - —à–∏—Ä–∏–Ω–∞ (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
  - \`minHeight\` / \`maxHeight\` / \`height\` - –≤—ã—Å–æ—Ç–∞ (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
  - \`padding\` - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã (—á–∏—Å–ª–æ ‚Üí px, —Å—Ç—Ä–æ–∫–∞ ‚Üí –∫–∞–∫ –µ—Å—Ç—å)
- \`onClick\` - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
- \`type\` - —Ç–∏–ø –∫–Ω–æ–ø–∫–∏: 'button' | 'submit' | 'reset'
- \`href\` - URL –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –≤ —Å—Å—ã–ª–∫—É
- \`target\` - –∞—Ç—Ä–∏–±—É—Ç target –¥–ª—è —Å—Å—ã–ª–∫–∏: '_self' | '_blank'
- \`asChild\` - —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫ –¥–æ—á–µ—Ä–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

### –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
\`\`\`tsx
// –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ px)
<Button 
  variant="buttonPrimary" 
  size={{ minWidth: 200, minHeight: 40 }}
>
  Click me
</Button>

// –°—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ª—é–±—ã–µ CSS-–µ–¥–∏–Ω–∏—Ü—ã)
<Button 
  variant="buttonPrimary" 
  size={{ width: "100%", minWidth: "200px" }}
>
  Click me
</Button>

// –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
<Button 
  variant="buttonPrimary" 
  size={{ minWidth: 200, height: "48px", padding: "12px 24px" }}
>
  Click me
</Button>

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å asChild:
–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ \`asChild = { true }\` –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Button –Ω–µ —Å–æ–∑–¥–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π DOM-—ç–ª–µ–º–µ–Ω—Ç,
–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–≤–æ–∏ —Å—Ç–∏–ª–∏ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫ –¥–æ—á–µ—Ä–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É. –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è:
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ (Next.js Link, React Router)
- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫–Ω–æ–ø–∫–∏ –∫ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–∞–º (label, div)
- –ò–∑–±–µ–∂–∞–Ω–∏—è –ª–∏—à–Ω–∏—Ö –æ–±–µ—Ä—Ç–æ–∫ –≤ DOM-–¥–µ—Ä–µ–≤–µ

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Å—ã–ª–∫–∞–º–∏:
–ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –ø—Ä–æ–ø—Å–∞ \`
href\` –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ —ç–ª–µ–º–µ–Ω—Ç \`<a>\`.
–í—Å–µ —Å—Ç–∏–ª–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è (hover, active, focus) –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫ —Å—Å—ã–ª–∫–µ.

\`\`\``
      }
    }
  },
  argTypes: {
    variant: {
      control: { type: 'radio' },
      options: ['buttonPrimary', 'buttonSecondary', 'buttonOutline', 'buttonText'],
      description: '–¢–µ–º–∞ –∫–Ω–æ–ø–∫–∏'
    },
    disabled: {
      control: { type: 'boolean' },
      description: '–°–æ—Å—Ç–æ—è–Ω–∏–µ disabled'
    },
    size: {
      description: '–û–±—ä–µ–∫—Ç —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∫–Ω–æ–ø–∫–∏'
    },
    onClick: {
      description: '–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞'
    }
  }
} satisfies Meta<typeof Button>;

export default meta;
type Story = StoryObj<typeof meta>;

export const Default: Story = {
  args: {
    children: 'Button',
    variant: 'buttonPrimary',
    onClick: () => alert('Button Default clicked!')
  }
};

Default.parameters = {
  docs: {
    description: {
      story: `–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –±–∞–∑–æ–≤–æ–π —Ç–µ–º–æ–π`
    }
  }
};

export const Secondary: Story = {
  args: {
    children: 'Button',
    variant: 'buttonSecondary',
    onClick: () => alert('Button Secondary clicked!')
  }
};

Secondary.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–º–æ–π Secondary`
    }
  }
};

export const Outline: Story = {
  args: {
    children: 'Button',
    variant: 'buttonOutline',
    onClick: () => alert('Button Outline clicked!')
  }
};

Outline.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–º–æ–π Outline`
    }
  }
};

export const CustomText: Story = {
  args: {
    children: 'Button',
    variant: 'buttonText',
    onClick: () => alert('Button Dark clicked!')
  }
};

CustomText.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ –±–µ–∑ –≤–∏–¥–∏–º–æ–≥–æ –±–æ—Ä–¥–µ—Ä–∞ –¥–ª—è –±–æ–ª—å—à–µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏`
    }
  }
};

export const Disabled: Story = {
  args: {
    children: 'Button',
    variant: 'buttonPrimary',
    disabled: true,
    onClick: () => alert('Button Dark clicked!')
  }
};

Disabled.parameters = {
  docs: {
    description: {
      story: `–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞`
    }
  }
};

export const TextWithIconRihgt: Story = {
  args: {
    children: <IconFlagRussia />,
    variant: 'buttonOutline'
  },
  render: () => (
    <Button variant={'buttonOutline'} onClick={() => alert('Button clicked!')}>
      Button <IconFlagRussia width={24} height={24} />
    </Button>
  )
};

TextWithIconRihgt.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–∫–æ–Ω–∫–æ–π —Å–ø—Ä–∞–≤–∞`
    }
  }
};

export const TextWithIconLeft: Story = {
  args: {
    children: <IconFlagRussia />,
    variant: 'buttonOutline',
    onClick: () => alert('Button Dark clicked!')
  },
  render: () => (
    <Button variant={'buttonOutline'} onClick={() => alert('Button clicked!')}>
      <IconFlagRussia width={24} height={24} /> Button
    </Button>
  )
};

TextWithIconLeft.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–∫–æ–Ω–∫–æ–π —Å–ª–µ–≤–∞`
    }
  }
};

export const OnlyIcon: Story = {
  args: {
    children: <IconFlagRussia width={24} height={24} />,
    variant: 'buttonOutline',
    onClick: () => alert('Button clicked!')
  }
};

OnlyIcon.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ —Å –∏–∫–æ–Ω–∫–æ–π`
    }
  }
};

export const WithSpan: Story = {
  args: {
    children: <IconFlagRussia />,
    variant: 'buttonOutline',
    onClick: () => alert('Button clicked!')
  },
  render: () => (
    <Button variant={'buttonOutline'} onClick={() => alert('Button clicked!')}>
      <span style={{ display: 'flex', flexDirection: 'column-reverse', alignItems: 'center' }}>
        <IconFlagRussia /> Button
      </span>
    </Button>
  )
};

WithSpan.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–Ω—É—Ç—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ–±–µ—Ä—Ç–∫—É span –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ span`
    }
  }
};

export const CustomWithIcon: Story = {
  args: {
    children: <IconGoogle />,
    variant: 'buttonOutline',
    size: {
      minWidth: 15,
      minHeight: 15,
      padding: '10px'
    },
    onClick: () => alert('Button clicked!')
  }
};

CustomWithIcon.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞ c –∏–∫–æ–Ω–∫–æ–π –∏ –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏`
    }
  }
};

export const ResponsiveButton: Story = {
  args: {
    children: 'Responsive Button',
    variant: 'buttonSecondary',
    size: {
      width: '100%',
      minWidth: 'min-content',
      maxWidth: '400px',
      height: 'clamp(40px, 5vh, 60px)'
    },
    onClick: () => alert('Responsive button clicked!')
  }
};

ResponsiveButton.parameters = {
  docs: {
    description: {
      story: `–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CSS-—Ñ—É–Ω–∫—Ü–∏–∏ \`clamp()\` –≤ –æ–±—ä–µ–∫—Ç–µ size.`
    }
  }
};

export const LinkButton: Story = {
  args: {
    children: 'Link Button',
    variant: 'buttonText',
    href: 'https://google.com/',
    target: '_blank'
  }
};

LinkButton.parameters = {
  docs: {
    description: {
      story: `–ö–Ω–æ–ø–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∫–∞–∫ —Å—Å—ã–ª–∫–∞`
    }
  }
};

export const asChildButton = () => {
  return (
    <Button variant={'buttonOutline'} size={{ width: 500, height: 60 }} target={'_blank'} asChild>
      <Link href="https://google.com/">About us</Link>
    </Button>
  );
};
asChildButton.parameters = {
  docs: {
    description: {
      story: '–ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–µ–∑ –ª–∏—à–Ω–µ–π –æ–±–µ—Ä—Ç–∫–∏, –ø—Ä–º–µ–Ω—è—è –∫ –Ω–µ–º—É —Å—Ç–∏–ª–∏ –∏ –ø—Ä–æ–ø—Å—ã'
    }
  }
};
